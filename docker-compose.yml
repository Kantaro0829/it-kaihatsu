version: '3.1'
services:
  flask:
    build:
      context: ./login
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - "./login:/projects"
    tty: true
    environment:
      TZ: Asia/Tokyo
    command: python /projects/app.py
  
  api-gateway:
    image: api-gateway
    build: 
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
    - "4002:4002"
    environment:
    - PORT=4002
    - LOGIN_HOST=flask
    - LOGIN_PORT=5000
    - ONGOING_DATA_HOST=ongoing-data
    - ONGOING_DATA_PORT=4003
    restart: "no"

  db:
    image: mysql:5.7
    ports: 
      - "3306:3306"
    volumes: 
      # 初期データを投入するSQLが格納されているdir
      - ./db/mysql_init:/docker-entrypoint-initdb.d
      # 永続化するときにマウントするdir
      - ./db/mysql_data:/var/lib/mysql
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ecc
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: test
      TZ: 'Asia/Tokyo'      
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ecc
      MONGO_INITDB_DATABASE: basicData
      TZ: Asia/Tokyo
    volumes:
      - ./mongo_db:/data/db
  rabbit:
    image: rabbitmq:3.8.5-management
    container_name: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
      - "15672"
    restart: always
  
  ongoing-data:
    image: ongoing-data
    build: 
      context: ./ongoing-data
      dockerfile: Dockerfile
    container_name: ongoing-data
    ports:
    - "4003:4003"
    environment:
    - DBHOST=mongodb://mongo:27017
    - PORT=4003
    - RABBIT=amqp://guest:guest@rabbit:5672
    restart: "no"
    depends_on: 
      - mongo
      - rabbit

  statistics:
    image: statistics
    build: 
      context: ./statistics
      dockerfile: Dockerfile
    container_name: statistics
    ports:
    - "4004:4004"
    environment:
    - DBHOST=mongodb://mongo:27017
    - PORT=4004
    - RABBIT=amqp://guest:guest@rabbit:5672
    restart: "no"
    depends_on: 
    - mongo
    - rabbit
    


